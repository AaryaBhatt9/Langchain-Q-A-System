# -*- coding: utf-8 -*-
"""LangchainQ&A.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-6_mL95or0czZJtIk0iry_Rz150lqO44
"""

! pip install -r requirements.txt

from langchain.llms import GooglePalm
api_key=" "
llm=GooglePalm(google_api_key=api_key,temperature=0.8)



llm("write an email requesting refund")

email=llm("Write an email requesting for 10days leave from office  ")
print(email)

from langchain.document_loaders.csv_loader import CSVLoader
loader= CSVLoader(file_path="codebasics_faqs - Copy.csv",source_column="prompt",encoding='cp1252')
data=loader.load()

from langchain.embeddings import HuggingFaceInstructEmbeddings
from langchain.vectorstores import FAISS
#from langchain.vectorstores import chroma

!pip install embeddings
!pip install instructorembedding

!pip install sentence-transformers==2.2.2

instructor_embeddings = HuggingFaceInstructEmbeddings()
vectordb=FAISS.from_documents(documents=data,embedding=instructor_embeddings)

retriever=vectordb.as_retriever()
rdocs=retriever.get_relevant_documents("How can i do payment for the course?")
rdocs

from langchain.prompts import PromptTemplate

prompt_template = """Given the following context and a question, generate an answer based on this context only.
In the answer try to provide as much text as possible from "response" section in the source document context without making much changes.
If the answer is not found in the context, kindly state "I don't know." Don't try to make up an answer.

CONTEXT: {context}

QUESTION: {question}"""


PROMPT = PromptTemplate(
    template=prompt_template, input_variables=["context", "question"]
)

from langchain.chains import RetrievalQA

chain = RetrievalQA.from_chain_type(llm=llm,
                            chain_type="stuff",
                            retriever=retriever,
                            input_key="query",
                            return_source_documents=True,
                            chain_type_kwargs = {"prompt": PROMPT})

chain("?")



